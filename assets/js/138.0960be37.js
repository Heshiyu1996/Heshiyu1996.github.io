(window.webpackJsonp=window.webpackJsonp||[]).push([[138],{470:function(t,a,e){"use strict";e.r(a);var r=e(29),s=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"性能优化"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[t._v("#")]),t._v(" 性能优化")]),t._v(" "),e("blockquote",[e("p",[t._v("这里会记录下一些有关React的性能优化知识")])]),t._v(" "),e("h2",{attrs:{id:"key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key"}},[t._v("#")]),t._v(" Key")]),t._v(" "),e("p",[e("code",[t._v("key")]),t._v("能让组件保持结构对的稳定性")]),t._v(" "),e("h2",{attrs:{id:"shouldcomponentupdate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shouldcomponentupdate"}},[t._v("#")]),t._v(" shouldComponentUpdate")]),t._v(" "),e("p",[t._v("相当关于"),e("code",[t._v("React.Memo")]),t._v("（是一个高阶组件，内置了useMemo方法来缓存）")]),t._v(" "),e("h2",{attrs:{id:"避免使用匿名函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#避免使用匿名函数"}},[t._v("#")]),t._v(" 避免使用匿名函数")]),t._v(" "),e("p",[t._v("每次渲染都会重新生成该函数")]),t._v(" "),e("h2",{attrs:{id:"延迟加载不是立即需要的组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#延迟加载不是立即需要的组件"}},[t._v("#")]),t._v(" 延迟加载不是立即需要的组件")]),t._v(" "),e("p",[e("code",[t._v("React.lazy(() => import('...'))")]),t._v(";")]),t._v(" "),e("h2",{attrs:{id:"使用react-fragment避免添加额外dom"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用react-fragment避免添加额外dom"}},[t._v("#")]),t._v(" 使用React.Fragment避免添加额外DOM")]),t._v(" "),e("p",[t._v("缺点：需手动引入所有Icon")])])}),[],!1,null,null,null);a.default=s.exports}}]);