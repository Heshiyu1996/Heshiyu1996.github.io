(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{167:function(t,s,a){t.exports=a.p+"assets/img/img-10.a5b62bc7.png"},392:function(t,s,a){t.exports=a.p+"assets/img/img-1.500eeda9.png"},393:function(t,s,a){t.exports=a.p+"assets/img/img-2.ee0d472c.png"},394:function(t,s,a){t.exports=a.p+"assets/img/img-3.653037c4.png"},395:function(t,s,a){t.exports=a.p+"assets/img/img-4.2a5ca4ea.png"},396:function(t,s,a){t.exports=a.p+"assets/img/img-5.b53b39e8.png"},397:function(t,s,a){t.exports=a.p+"assets/img/img-6.e7a97a31.png"},398:function(t,s,a){t.exports=a.p+"assets/img/img-12.87ce9ca7.png"},399:function(t,s,a){t.exports=a.p+"assets/img/img-7.66473de8.png"},400:function(t,s,a){t.exports=a.p+"assets/img/img-13.f4b785d9.png"},401:function(t,s,a){t.exports=a.p+"assets/img/img-8.810efedd.png"},402:function(t,s,a){t.exports=a.p+"assets/img/img-9.b0e0ec3d.png"},489:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"diff、react-diff、vue-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#diff、react-diff、vue-diff"}},[t._v("#")]),t._v(" Diff、React Diff、Vue Diff")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#diff、react-diff、vue-diff"}},[t._v("Diff、React Diff、Vue Diff")]),n("ul",[n("li",[n("a",{attrs:{href:"#传统diff算法"}},[t._v("传统diff算法")])]),n("li",[n("a",{attrs:{href:"#什么是virtual-dom"}},[t._v("什么是Virtual DOM")])]),n("li",[n("a",{attrs:{href:"#react-virtual-dom-diff"}},[t._v("[React] Virtual DOM Diff")])]),n("li",[n("a",{attrs:{href:"#react-fiber-diff"}},[t._v("[React] Fiber Diff")])]),n("li",[n("a",{attrs:{href:"#vue-virtual-dom-diff"}},[t._v("[Vue] Virtual DOM Diff")])]),n("li",[n("a",{attrs:{href:"#四种diff算法总结"}},[t._v("四种Diff算法总结")])]),n("li",[n("a",{attrs:{href:"#参考链接"}},[t._v("参考链接")])])])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"传统diff算法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#传统diff算法"}},[t._v("#")]),t._v(" 传统diff算法")]),t._v(" "),n("blockquote",[n("p",[t._v("算法复杂度O(n3)")])]),t._v(" "),n("p",[t._v("通过"),n("strong",[t._v("递归")]),t._v("，对 HTML DOM树里的节点 进行依次对比。")]),t._v(" "),n("h2",{attrs:{id:"什么是virtual-dom"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#什么是virtual-dom"}},[t._v("#")]),t._v(" 什么是Virtual DOM")]),t._v(" "),n("p",[t._v("渲染真实DOM的开销很大，直接渲染到真实DOM会引起整个DOM树的"),n("strong",[t._v("重排")]),t._v("和"),n("strong",[t._v("重绘")]),t._v("。")]),t._v(" "),n("p",[t._v("React、Vue都"),n("strong",[t._v("采用Virtual DOM来实现对真实DOM的映射")]),t._v("，所以React Diff、Vue Diff算法的实质是 "),n("strong",[t._v("对两个JavaScript对象的差异查找")]),t._v("。")]),t._v(" "),n("p",[t._v("真实DOM：")]),t._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("reactID"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("className")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myDiv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("1"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br")])]),n("ul",[n("li",[t._v("React Virtual DOM")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reactID'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      className"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myDiv'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  chidren"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'p'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("props"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("ul",[n("li",[t._v("Vue Virtual DOM")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// body下的 <div id="vueId" class="classA"><div> 对应的 oldVnode 就是')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  el"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("  div  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对真实的节点的引用，本例中就是document.querySelector('#vueId.classA')")]),t._v("\n  tagName"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'DIV'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//节点的标签")]),t._v("\n  sel"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'div#vueId.classA'")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//节点的选择器")]),t._v("\n  data"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一个存储节点属性的对象，对应节点的el[prop]属性，例如onclick , style")]),t._v("\n  children"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//存储子节点的数组，每个子节点也是vnode结构")]),t._v("\n  text"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//如果是文本节点，对应文本节点的textContent，否则为null")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br")])]),n("h2",{attrs:{id:"react-virtual-dom-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-virtual-dom-diff"}},[t._v("#")]),t._v(" [React] Virtual DOM Diff")]),t._v(" "),n("blockquote",[n("p",[t._v("算法复杂度为O(n)")])]),t._v(" "),n("p",[t._v("React diff（v16前）基于三个策略：")]),t._v(" "),n("ul",[n("li",[t._v("忽略DOM节点的跨层级操作（因为特别少）")]),t._v(" "),n("li",[t._v("拥有相同类的两个组件将会生成相似的树形结构，拥有不同类的两个组件将会生成不同的树形结构")]),t._v(" "),n("li",[t._v("同一层级的一组子节点，通过"),n("code",[t._v("key")]),t._v("值进行区分")])]),t._v(" "),n("p",[t._v("基于以上三个策略，React分别对"),n("code",[t._v("tree diff")]),t._v("、"),n("code",[t._v("component diff")]),t._v("、"),n("code",[t._v("element diff")]),t._v("进行了算法优化。")]),t._v(" "),n("blockquote",[n("p",[t._v("即：不同层级不比、不同组件类型不比、不同key值不比")])]),t._v(" "),n("h3",{attrs:{id:"tree-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tree-diff"}},[t._v("#")]),t._v(" tree diff")]),t._v(" "),n("p",[n("strong",[t._v("比较范围：")]),t._v(" 树之间。")]),t._v(" "),n("p",[n("strong",[t._v("步骤：")]),t._v(" 对树进行分层比较，两棵树只会对同一层次的节点进行比较。如果节点不存在了则会直接销毁。不会进一步比较。")]),t._v(" "),n("blockquote",[n("p",[t._v("所以只需对树进行一次遍历，便能完成整个DOM树的比较。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(392),alt:"alt"}})]),t._v(" "),n("blockquote",[n("p",[t._v("React只会对相同颜色方框内的DOM节点进行比较（即同一个父节点下的所有子节点）。")])]),t._v(" "),n("p",[n("strong",[t._v("建议：")])]),t._v(" "),n("ul",[n("li",[t._v("应保持DOM结构的稳定（尽可能少地动态操作DOM结构）")]),t._v(" "),n("li",[t._v("减少节点数")]),t._v(" "),n("li",[t._v("可通过CSS隐藏/显示节点，而不是真正移除/添加DOM节点")])]),t._v(" "),n("h4",{attrs:{id:"对于跨层级的节点，只有-创建-和-删除-操作"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对于跨层级的节点，只有-创建-和-删除-操作"}},[t._v("#")]),t._v(" 对于跨层级的节点，只有 创建 和 删除 操作")]),t._v(" "),n("p",[n("img",{attrs:{src:a(393),alt:"alt"}})]),t._v(" "),n("blockquote",[n("p",[t._v("React diff 的执行情况： delete A -> create A -> create B -> create C。")])]),t._v(" "),n("h3",{attrs:{id:"component-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#component-diff"}},[t._v("#")]),t._v(" component diff")]),t._v(" "),n("p",[n("strong",[t._v("比较范围：")]),t._v(" 组件之间。")]),t._v(" "),n("p",[n("strong",[t._v("步骤：")])]),t._v(" "),n("ul",[n("li",[t._v("同一类型的组件（即：两节点是同一个组件类的两个不同实例），按照 "),n("code",[t._v("同层比较策略")]),t._v(" 继续比较Virtual DOM tree（也可以指定"),n("code",[t._v("shouldComponentUpdate")]),t._v("无需比较）")]),t._v(" "),n("li",[t._v("如果不是，则将该组件判断为"),n("code",[t._v("dirty component")]),t._v("，从而替换整个组件（因为React认为：不同类型的组件，DOM树相同的情况非常少）")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(394),alt:"alt"}})]),t._v(" "),n("blockquote",[n("p",[t._v("当component D改变为component G时，即使这两个component结构相似。但React会认为"),n("strong",[t._v("D和G是不同类型的组件")]),t._v("，就不会比较二者的结构：直接删除component D，重新创建component G以及其子节点。")])]),t._v(" "),n("p",[n("strong",[t._v("建议：")])]),t._v(" "),n("ul",[n("li",[t._v("对于同一类型的组件，可以通过"),n("code",[t._v("shouldComponentUpdate()")]),t._v("来判断该组件是否需要diff")]),t._v(" "),n("li",[t._v("对于类似的结构应尽量封装成组件，既减少代码量，又能减少component diff的性能损耗。")])]),t._v(" "),n("h3",{attrs:{id:"element-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#element-diff"}},[t._v("#")]),t._v(" element diff")]),t._v(" "),n("p",[n("strong",[t._v("比较范围：")]),t._v(" 同一层级的节点之间。")]),t._v(" "),n("p",[t._v("React diff提供了三种“同层级节点”的操作："),n("code",[t._v("插入")]),t._v("、"),n("code",[t._v("删除")]),t._v("、"),n("code",[t._v("移动")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("步骤：")])]),t._v(" "),n("ul",[n("li",[t._v("对新集合中的节点进行循环遍历"),n("code",[t._v("for (name in nextChildren)")])]),t._v(" "),n("li",[t._v("先判断 "),n("strong",[t._v("新旧集合中是否存在相同的节点")]),t._v("（通过唯一的"),n("code",[t._v("key")]),t._v("值）"),n("code",[t._v("if(prevChild === nextChild)")]),t._v("，如果不存在，则进行 "),n("code",[t._v("插入")]),t._v("；")]),t._v(" "),n("li",[t._v("如果旧集合中存在，则比较 "),n("code",[t._v("当前节点在旧集合中的位置（child._mountIndex）")]),t._v(" 与 "),n("code",[t._v("访问过的节点，在旧集合中最右的位置（lastInddex）")])]),t._v(" "),n("li",[n("code",[t._v("if(child._mountIndex > lastIndex)")]),t._v("，说明"),n("strong",[t._v("当前访问节点在旧集合中的位置 就比 上一个节点位置 靠后，则该节点不会影响其他节点的位置，不需执行移动操作")]),t._v("；否则进行移动")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(395),alt:"alt"}})]),t._v(" "),n("blockquote",[n("p",[t._v("React diff 的执行情况：B、D不作任何操作，A、C进行移动即可。")])]),t._v(" "),n("p",[n("strong",[t._v("建议：")])]),t._v(" "),n("ul",[n("li",[t._v("给同一层级的同组子节点设置"),n("code",[t._v("key")]),t._v("值")]),t._v(" "),n("li",[t._v("尽量减少类似将最后一个节点移动到列表首部的操作")])]),t._v(" "),n("p",[n("strong",[t._v("注意：")]),t._v(" 这种方式和Vue不太一样。Vue采用的是由"),n("strong",[t._v("两端至中间")]),t._v("，先是4种比较方式，都匹配不上，就是key比较。")]),t._v(" "),n("h3",{attrs:{id:"react更新阶段"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react更新阶段"}},[t._v("#")]),t._v(" React更新阶段")]),t._v(" "),n("p",[t._v("实际上，只有在 "),n("strong",[t._v("React更新阶段的DOM元素更新过程")]),t._v(" 才会执行Diff算法。")]),t._v(" "),n("p",[t._v("React更新阶段会对ReactElement类型（Text节点、组件、DOM）判断，从而进行不同的操作。")]),t._v(" "),n("ul",[n("li",[t._v("Text节点：直接更新文案")]),t._v(" "),n("li",[t._v("组件：结合策略二")]),t._v(" "),n("li",[t._v("DOM："),n("strong",[t._v("调用diff算法")]),t._v("（"),n("code",[t._v("this._updateDOMChildren")]),t._v("）")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(396),alt:"alt"}})]),t._v(" "),n("h3",{attrs:{id:"总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),n("p",[n("img",{attrs:{src:a(397),alt:"alt"}}),t._v(")")]),t._v(" "),n("h2",{attrs:{id:"react-fiber-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-fiber-diff"}},[t._v("#")]),t._v(" [React] Fiber Diff")]),t._v(" "),n("p",[t._v("React16改造了Virtal DOM的结构，引入了"),n("code",[t._v("Fiber")]),t._v("的链表结构。")]),t._v(" "),n("blockquote",[n("p",[t._v("因为以前的Virtual DOM Diff可能比较耗时，导致浏览器FPS降低。")])]),t._v(" "),n("h3",{attrs:{id:"react-fiber"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-fiber"}},[t._v("#")]),t._v(" React Fiber")]),t._v(" "),n("p",[n("code",[t._v("Fiber节点")]),t._v("就相当于以前的 Virtual DOM节点 ，结构如下：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  tag"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST_COMPONENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  type"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" parentFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前节点的父节点")]),t._v("\n  child"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" childFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一个子节点")]),t._v("\n  sibling"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 右边的第一个兄弟节点")]),t._v("\n  alternate"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" currentFiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前节点对应的新Fiber节点（带有新的props和state）")]),t._v("\n  stateNode"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" instance"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  props"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" children"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" className"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  partialState"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  effectTag"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PLACEMENT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  effects"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br")])]),n("p",[t._v("假设有这么一个DOM结构：")]),t._v(" "),n("div",{staticClass:"language-html line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("li")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("ul")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br")])]),n("p",[t._v("通过 "),n("strong",[t._v("链表的形式")]),t._v(" 去描述整棵树：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(167),alt:"alt"}})]),t._v(" "),n("p",[n("strong",[t._v("Fiber数据结构选用链表")]),t._v("的好处：在遍历Diff时，即使中断了，但只需记住中断时的那个节点，就可在下一个时间片空闲时，继续Diff。")]),t._v(" "),n("h3",{attrs:{id:"fiber-diff的大致过程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fiber-diff的大致过程"}},[t._v("#")]),t._v(" Fiber Diff的大致过程")]),t._v(" "),n("p",[n("strong",[t._v("从链表头开始遍历，碰到一个节点就和它自己的 "),n("code",[t._v("alternate")]),t._v(" 比较，并记录下需要更新的东西（作为"),n("code",[t._v("commit")]),t._v("），并把这些更新通过 "),n("code",[t._v("return")]),t._v(" 提交到当前节点的父节点。当遍历完整个链表时，再通过 "),n("code",[t._v("return")]),t._v(" 回溯到根节点。这样就能把所有的更新全部带到根节点，最后更新到真实的DOM中。")])]),t._v(" "),n("blockquote",[n("p",[t._v("Fiber Diff算法是基于 "),n("strong",[t._v("节点的“插入、删除、移动”等操作都是在同一层级中进行")]),t._v(" 这个前提的。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(398),alt:"alt"}})]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("从根节点开始：")]),t._v(" "),n("ul",[n("li",[t._v("div1通过 child 到div2")]),t._v(" "),n("li",[t._v("div2 和自己的 alternate 比较完，把更新 commit1 通过return 提交到 div1")]),t._v(" "),n("li",[t._v("div2 通过 sibling 到ul 1")]),t._v(" "),n("li",[t._v("ul1 和自己的 alternate 比较完，把更新 commit2 通过return 提交到 div1")]),t._v(" "),n("li",[t._v("ul1 通过 child 到 li1")]),t._v(" "),n("li",[t._v("li1 和自己的 alternate 比较完，把更新 commit3 通过return 提交到 ul1")]),t._v(" "),n("li",[t._v("li1 通过 sibling 到 li2")]),t._v(" "),n("li",[t._v("li2 和自己的 alternate 比较完，把更新 commit4 通过return 提交到 ul1")]),t._v(" "),n("li",[n("strong",[t._v("遍历完成，开始回溯。li2 通过 return 回到 ul1")]),t._v("（注意是到 li2 才 return）")]),t._v(" "),n("li",[t._v("ul1 把 commit3 和 commit4 通过 return 提交到 div")]),t._v(" "),n("li",[t._v("ul1 通过 return 到 div1")]),t._v(" "),n("li",[t._v("div1 获取到所有更新 commit1、commit2、commit3、commit4，一次性更新到真实的DOM中")])])]),t._v(" "),n("h3",{attrs:{id:"fiber-diff的入口函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fiber-diff的入口函数"}},[t._v("#")]),t._v(" Fiber Diff的入口函数")]),t._v(" "),n("p",[t._v("Fiber Diff是从 "),n("code",[t._v("reconcileChildren")]),t._v(" 开始的 "),n("em",[t._v("（非首次渲染时）")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("current"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  workInProgress"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nextChildren"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  renderExpirationTime"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")])]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果首次渲染，通过mountChildFibers创建子节点的Fiber实例")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("current "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("mountChildFibers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      renderExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 否则，通过reconcileChildFibers进行Diff")]),t._v("\n    workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildFibers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      workInProgress"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      current"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("child"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      nextChildren"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      renderExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br")])]),n("p",[n("code",[t._v("reconcileChildFibers")]),t._v("函数的作用："),n("strong",[t._v("构建"),n("code",[t._v("currentInWorkProgress")]),t._v("，然后得出"),n("code",[t._v("effect list")]),t._v("，为下一个阶段（commit）做准备")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconcileChildFibers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  returnFiber"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即将Diff的这层的父节点")]),t._v("\n  currentFirstChild"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当前层的第一个Fiber节点")]),t._v("\n  newChild"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" any"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 即将更新的vdom节点（可能是个TextNode、可能是ReactElement、可能是数组），不是Fiber节点")]),t._v("\n  expirationTime"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" ExpirationTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 过期时间（与diff无关）")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Fiber "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 主要的 Diff 逻辑")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("p",[t._v("对于 "),n("code",[t._v("currentFirstChild")]),t._v(" 会有 "),n("strong",[t._v("4 种情况")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("TextNode")]),t._v(" "),n("li",[t._v("React Element（通过该节点是否有 "),n("code",[t._v("$$typeof")]),t._v(" 区分）")]),t._v(" "),n("li",[t._v("数组")]),t._v(" "),n("li",[t._v("可迭代的children（跟数组的处理方式差不多）")])]),t._v(" "),n("blockquote",[n("p",[t._v("注意：currentFirstNode是当前层的第一个Fiber节点。")])]),t._v(" "),n("h3",{attrs:{id:"textnode【待更新】"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#textnode【待更新】"}},[t._v("#")]),t._v(" TextNode【待更新】")]),t._v(" "),n("p",[t._v("如果"),n("code",[t._v("currentFirstChild")]),t._v(" 是 "),n("code",[t._v("TextNode")])]),t._v(" "),n("ul",[n("li",[n("code",[t._v("xxx")]),t._v(" 也是 "),n("code",[t._v("TextNode")]),t._v("，那就代表这个节点可以复用")]),t._v(" "),n("li",[n("code",[t._v("xxx")]),t._v(" 不是 "),n("code",[t._v("TextNode")])])]),t._v(" "),n("p",[t._v("Demo：")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// before：当前 UI 对应的节点的 jsx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("xxx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("xxx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// after：更新成功后的节点对应的 jsx")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n          前端桃园\n      "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//...")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br")])]),n("p",[n("img",{attrs:{src:a(167),alt:"alt"}})]),t._v(" "),n("p",[t._v("若"),n("code",[t._v("currentFirstNode")]),t._v("不是TextNode，就代表这个节点不能复用。会从"),n("code",[t._v("currentFirstNode")]),t._v("开始，"),n("strong",[t._v("删除剩余的节点")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"react-element【待更新】"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#react-element【待更新】"}},[t._v("#")]),t._v(" React Element【待更新】")]),t._v(" "),n("p",[t._v("对于"),n("code",[t._v("React Element")]),t._v("判断这个节点是否可以复用：")]),t._v(" "),n("ul",[n("li",[t._v("key相同")]),t._v(" "),n("li",[t._v("节点的类型相同")])]),t._v(" "),n("p",[t._v("同时满足以上两点，代表这个节点只是内容变化，不需要创建新的节点，是可以复用的。")]),t._v(" "),n("p",[t._v("如果节点类型不相同，就将节点从当前节点开始，把剩余的都删除。")]),t._v(" "),n("h3",{attrs:{id:"array【待更新】"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#array【待更新】"}},[t._v("#")]),t._v(" Array【待更新】")]),t._v(" "),n("p",[t._v("建议：在开发组件时，保持稳定的DOM结构有助于性能提升。")]),t._v(" "),n("h2",{attrs:{id:"vue-virtual-dom-diff"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-virtual-dom-diff"}},[t._v("#")]),t._v(" [Vue] Virtual DOM Diff")]),t._v(" "),n("p",[t._v("Vue和React一样，只进行"),n("strong",[t._v("同层比较，忽略跨级操作")]),t._v("。")]),t._v(" "),n("p",[t._v("当响应式属性"),n("code",[t._v("setter")]),t._v("执行"),n("code",[t._v("Dep.notify()")]),t._v("时，就会开始执行"),n("code",[t._v("patch")]),t._v("，一边比较新、旧节点，一边给"),n("code",[t._v("真实DOM")]),t._v("打补丁。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patch")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不同类型节点，直接用新节点替换整个老节点")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" oEl "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" parentEle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("parentNode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oEl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentEle "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentEle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextSibling")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oEl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentEle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            oldVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vnode\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br")])]),n("p",[n("code",[t._v("sameVnode")]),t._v("会当两节点的"),n("code",[t._v("key")]),t._v(" && "),n("code",[t._v("sel")]),t._v("相同时，认为是同一类型节点。此时不需要移动。")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//两节点key值相同，并且sel属性值相同，即认为两节点属同一类型，可进行下一步比较")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sel\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br")])]),n("p",[t._v("也就是说，即便同一个节点，只是className不同，Vue也会认为是两个不同类型的节点，从而"),n("strong",[t._v("直接用新节点替换整个老节点")]),t._v("。")]),t._v(" "),n("blockquote",[n("p",[t._v("这和React Diff实现不同，react对于同一节点元素认为是同一类型节点，只更新其节点上的属性。")])]),t._v(" "),n("h3",{attrs:{id:"patchvnode"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#patchvnode"}},[t._v("#")]),t._v(" patchVnode")]),t._v(" "),n("p",[t._v("两个节点值得比较时，会调用"),n("code",[t._v("patchVnode")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 作用：让vnode.el引用到现在真实dom（即oldVnode.el）；同时当el发生变化时，vnode.el会同时变化")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldCh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("children\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况一：引用一致，没有变化")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况二：仅为文本节点发生变化，直接修改")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTextContent")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("text"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateEle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况三：新、旧节点都有子节点，且不一样，调用updateChildren比较（Vue diff核心）")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldCh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" ch "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" oldCh "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ch"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况四：只有新节点具有子节点，因为vnode.el引用了老的dom节点，createEle会在老dom上添加子节点")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//create el's children dom")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 情况五：新节点没有子节点，老节点有子节点，直接删除老节点")]),t._v("\n            api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeChildren")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br")])]),n("h3",{attrs:{id:"updatechildren"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#updatechildren"}},[t._v("#")]),t._v(" updateChildren")]),t._v(" "),n("p",[t._v("当两个节点值得比较，且它们都有子节点，且不一样时，调用"),n("code",[t._v("updateChildren")]),t._v("。")]),t._v(" "),n("p",[n("strong",[t._v("步骤")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("oldCh")]),t._v("和"),n("code",[t._v("newCh")]),t._v("各有两个头尾的变量"),n("code",[t._v("StartIdx")]),t._v("和"),n("code",[t._v("EndIdx")])]),t._v(" "),n("li",[t._v("依次进行4次比较："),n("strong",[t._v("旧头新头、旧尾新尾、旧头新尾、旧尾新头")]),t._v(" 它们是否为同一类型节点。若是，则 "),n("strong",[t._v("“这一对值得比较”")]),t._v("，开始"),n("code",[t._v("patchVnode")])]),t._v(" "),n("li",[t._v("若4次匹配不上，开始比较"),n("code",[t._v("key")]),t._v("值")]),t._v(" "),n("li",[t._v("会从 用"),n("code",[t._v("key")]),t._v("值生成的对象"),n("code",[t._v("oldKeyToIdx")]),t._v(" 中查找匹配节点")]),t._v(" "),n("li",[t._v("最后变量会往中间靠拢，当"),n("code",[t._v("StartIdx")]),t._v(">"),n("code",[t._v("EndIdx")]),t._v("时结束比较。")])]),t._v(" "),n("p",[n("img",{attrs:{src:a(399),alt:"alt"}})]),t._v(" "),n("p",[n("strong",[t._v("总结遍历过程，有3种DOM操作")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("当"),n("code",[t._v("oldStartVnode")]),t._v("、"),n("code",[t._v("newEndVnode")]),t._v("值得比较，说明"),n("code",[t._v("oldStartVnode.el")]),t._v("需要移动到"),n("code",[t._v("oldEndVnode.el")]),t._v("后边")]),t._v(" "),n("li",[t._v("当"),n("code",[t._v("oldEndVnode")]),t._v("、"),n("code",[t._v("newStartVnode")]),t._v("值得比较，说明"),n("code",[t._v("oldEndVnode.el")]),t._v("需要移动到"),n("code",[t._v("oldStartVnode.el")]),t._v("前边")]),t._v(" "),n("li",[t._v("当"),n("code",[t._v("newCh")]),t._v("的节点"),n("code",[t._v("oldCh")]),t._v("没有，将新节点插入到"),n("code",[t._v("oldStartVnode.el")]),t._v("前边")])]),t._v(" "),n("p",[n("strong",[t._v("结束时，分2种情况")]),t._v("：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("oldStartIdx > oldEndIdx")]),t._v("，表示"),n("code",[t._v("oldCh")]),t._v("先遍历完，此时"),n("code",[t._v("newStartIdx")]),t._v("和"),n("code",[t._v("newEndIdx")]),t._v("之间的vnode是新增的，调用"),n("code",[t._v("addVnodes")]),t._v("。新节点被插入到子节点的末尾")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx > newEndIdx")]),t._v("，表示"),n("code",[t._v("newCh")]),t._v("先遍历完，此时"),n("code",[t._v("oldStartIdx")]),t._v("和"),n("code",[t._v("oldEndIdx")]),t._v("之间的vnode在新的节点里已经不存在了，调用"),n("code",[t._v("removeVnodes")]),t._v("将它们从DOM里删除。")])]),t._v(" "),n("h3",{attrs:{id:"总结vue-diff流程"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#总结vue-diff流程"}},[t._v("#")]),t._v(" 总结Vue Diff流程")]),t._v(" "),n("p",[n("img",{attrs:{src:a(400),alt:"alt"}})]),t._v(" "),n("h4",{attrs:{id:"demo"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),n("p",[t._v("假设现在有个父节点"),n("code",[t._v('<div class="parent"></div>')]),t._v("，下面有"),n("code",[t._v("a、b、c、d")]),t._v("这四个不同的子节点。突然发生一次"),n("code",[t._v("patch")]),t._v("，改变了子节点的内容。")]),t._v(" "),n("h3",{attrs:{id:"没有设置key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#没有设置key"}},[t._v("#")]),t._v(" 没有设置key")]),t._v(" "),n("ul",[n("li",[t._v("执行"),n("code",[t._v("patch")])]),t._v(" "),n("li",[t._v("先从父节点开始，比较其"),n("code",[t._v("oldVnode")]),t._v("、"),n("code",[t._v("newVnode")]),t._v("，发现"),n("strong",[t._v("值得比较")]),t._v("。")]),t._v(" "),n("li",[t._v("传入父节点的新、旧Vnode节点，执行"),n("code",[t._v("patchVnode")])]),t._v(" "),n("li",[t._v("先是将真实dom（"),n("code",[t._v("oldVnode.el")]),t._v("）赋值给"),n("code",[t._v("vnode.el")]),t._v("、"),n("code",[t._v("el")]),t._v("。作用是当el发生变化，"),n("code",[t._v("vnode.el")]),t._v("会同时变化")]),t._v(" "),n("li",[t._v("判断情况一：引用不一致，发生了变化")]),t._v(" "),n("li",[t._v("判断情况二：不为文本节点，继续判断")]),t._v(" "),n("li",[t._v("判断情况三：新、旧子节点都有各自且不同的子节点，调用"),n("code",[t._v("updateChildren")]),t._v("比较（Vue diff核心，即头尾的4次比较）")]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("b")]),t._v("节点：\n"),n("ul",[n("li",[t._v("依次比较"),n("code",[t._v("旧头新头")]),t._v("、"),n("code",[t._v("旧尾新尾")]),t._v("、"),n("code",[t._v("旧头新尾")]),t._v("、"),n("code",[t._v("旧尾新头")]),t._v("，发现都不值得比较；")]),t._v(" "),n("li",[t._v("开始比较"),n("code",[t._v("key")])]),t._v(" "),n("li",[t._v("发现"),n("code",[t._v("key")]),t._v("值不存在，执行"),n("code",[t._v("insertBefore")]),t._v("，将"),n("code",[t._v("新头")]),t._v("插入到"),n("code",[t._v("旧头")]),t._v("前面")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("，新头下标继续往后。为"),n("code",[t._v("e")]),t._v("节点")])])]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("e")]),t._v("节点：\n"),n("ul",[n("li",[t._v("依次比较"),n("code",[t._v("旧头新头")]),t._v("、"),n("code",[t._v("旧尾新尾")]),t._v("、"),n("code",[t._v("旧头新尾")]),t._v("、"),n("code",[t._v("旧尾新头")]),t._v("，发现都不值得比较；")]),t._v(" "),n("li",[t._v("开始比较"),n("code",[t._v("key")])]),t._v(" "),n("li",[t._v("发现"),n("code",[t._v("key")]),t._v("值不存在，执行"),n("code",[t._v("insertBefore")]),t._v("，将"),n("code",[t._v("新头")]),t._v("插入到"),n("code",[t._v("旧头")]),t._v("前面")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("，新头下标继续往后。为"),n("code",[t._v("d")]),t._v("节点")])])]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("d")]),t._v("节点：\n"),n("ul",[n("li",[t._v("发现"),n("code",[t._v("旧尾新头")]),t._v("为同一类型节点，"),n("strong",[t._v("值得比较")]),t._v("；")]),t._v(" "),n("li",[t._v("开始执行"),n("code",[t._v("patchVnode")]),t._v("，发现引用一致没有变化，将"),n("code",[t._v("旧尾")]),t._v("插入到"),n("code",[t._v("新头")]),t._v("前面")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("、"),n("code",[t._v("oldEndIdx--")]),t._v("，新头下标继续往后、旧尾下标往前。此时新头为"),n("code",[t._v("c")]),t._v("，旧尾为"),n("code",[t._v("c")])])])]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("c")]),t._v("节点：\n"),n("ul",[n("li",[t._v("发现"),n("code",[t._v("旧尾新头")]),t._v("为同一类型节点，"),n("strong",[t._v("值得比较")]),t._v("；")]),t._v(" "),n("li",[t._v("开始执行"),n("code",[t._v("patchVnode")]),t._v("，发现引用一致没有变化，将"),n("code",[t._v("旧尾")]),t._v("插入到"),n("code",[t._v("新头")]),t._v("前面")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("、"),n("code",[t._v("oldEndIdx--")]),t._v("，新头下标继续往后、旧尾下标往前。")]),t._v(" "),n("li",[t._v("此时"),n("code",[t._v("newStartIdx > newEndIdx")]),t._v("，表示"),n("code",[t._v("newCh")]),t._v("先遍历完，此时"),n("code",[t._v("oldStartIdx")]),t._v("、"),n("code",[t._v("oldEndIdx")]),t._v("之间的节点"),n("code",[t._v("a")]),t._v("、"),n("code",[t._v("b")]),t._v("已经不存在了，调用"),n("code",[t._v("removeVnodes")]),t._v("将它们从DOM里删除")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(401),alt:"alt"}})]),t._v(" "),n("h3",{attrs:{id:"设置了key"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设置了key"}},[t._v("#")]),t._v(" 设置了key")]),t._v(" "),n("blockquote",[n("p",[t._v("若设置了key值，b元素将得到复用。")])]),t._v(" "),n("ul",[n("li",[t._v("执行"),n("code",[t._v("patch")])]),t._v(" "),n("li",[t._v("先从父节点开始，比较其"),n("code",[t._v("oldVnode")]),t._v("、"),n("code",[t._v("newVnode")]),t._v("，发现"),n("strong",[t._v("值得比较")]),t._v("。")]),t._v(" "),n("li",[t._v("传入父节点的新、旧Vnode节点，执行"),n("code",[t._v("patchVnode")])]),t._v(" "),n("li",[t._v("先是将真实dom（"),n("code",[t._v("oldVnode.el")]),t._v("）赋值给"),n("code",[t._v("vnode.el")]),t._v("、"),n("code",[t._v("el")]),t._v("。作用是当el发生变化，"),n("code",[t._v("vnode.el")]),t._v("会同时变化")]),t._v(" "),n("li",[t._v("判断情况一：引用不一致，发生了变化")]),t._v(" "),n("li",[t._v("判断情况二：不为文本节点，继续判断")]),t._v(" "),n("li",[t._v("判断情况三：新、旧子节点都有各自且不同的子节点，调用"),n("code",[t._v("updateChildren")]),t._v("比较（Vue diff核心，即头尾的4次比较）")]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("b")]),t._v("节点：\n"),n("ul",[n("li",[t._v("依次比较"),n("code",[t._v("旧头新头")]),t._v("、"),n("code",[t._v("旧尾新尾")]),t._v("、"),n("code",[t._v("旧头新尾")]),t._v("、"),n("code",[t._v("旧尾新头")]),t._v("，发现都不值得比较；")]),t._v(" "),n("li",[n("strong",[t._v("开始比较"),n("code",[t._v("key")])]),t._v("（"),n("code",[t._v("key")]),t._v("值设置与否，不同在于这一步！！）")]),t._v(" "),n("li",[t._v("发现"),n("code",[t._v("key")]),t._v("值在旧集合中，存在一个同"),n("code",[t._v("key")]),t._v("的下标，将旧集合中的该元素设为"),n("code",[t._v("elmToMove")])]),t._v(" "),n("li",[t._v("判断"),n("code",[t._v("elmToMove")]),t._v("和"),n("code",[t._v("新头")]),t._v("节点的选择器"),n("code",[t._v("sel")]),t._v("（因为"),n("code",[t._v("key")]),t._v("已经为相同）")]),t._v(" "),n("li",[t._v("发现"),n("code",[t._v("sel")]),t._v("相同，表明他们"),n("strong",[t._v("值得比较")])]),t._v(" "),n("li",[t._v("将旧集合对应节点设为"),n("code",[t._v("null")]),t._v("，并将"),n("code",[t._v("elmToMove")]),t._v("节点插入到"),n("code",[t._v("旧头")]),t._v("前")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("，新头下标继续往后。为"),n("code",[t._v("e")]),t._v("节点")])])]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("e")]),t._v("节点：\n"),n("ul",[n("li",[t._v("依次比较"),n("code",[t._v("旧头新头")]),t._v("、"),n("code",[t._v("旧尾新尾")]),t._v("、"),n("code",[t._v("旧头新尾")]),t._v("、"),n("code",[t._v("旧尾新头")]),t._v("，发现都不值得比较；")]),t._v(" "),n("li",[t._v("开始比较"),n("code",[t._v("key")])]),t._v(" "),n("li",[t._v("发现"),n("code",[t._v("key")]),t._v("值在旧集合中不存在，直接将"),n("code",[t._v("新头")]),t._v("插入到"),n("code",[t._v("旧头")]),t._v("前")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("，新头下标继续往后。为"),n("code",[t._v("d")]),t._v("节点")])])]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("d")]),t._v("节点：\n"),n("ul",[n("li",[t._v("发现"),n("code",[t._v("旧尾新头")]),t._v("为同一类型节点，"),n("strong",[t._v("值得比较")]),t._v("；")]),t._v(" "),n("li",[t._v("开始执行"),n("code",[t._v("patchVnode")]),t._v("，发现引用一致没有变化，将"),n("code",[t._v("旧尾")]),t._v("插入到"),n("code",[t._v("新头")]),t._v("前面")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("、"),n("code",[t._v("oldEndIdx--")]),t._v("，新头下标继续往后、旧尾下标往前。此时新头为"),n("code",[t._v("c")]),t._v("，旧尾为"),n("code",[t._v("c")])])])]),t._v(" "),n("li",[t._v("对于"),n("code",[t._v("c")]),t._v("节点：\n"),n("ul",[n("li",[t._v("发现"),n("code",[t._v("旧尾新头")]),t._v("为同一类型节点，"),n("strong",[t._v("值得比较")]),t._v("；")]),t._v(" "),n("li",[t._v("开始执行"),n("code",[t._v("patchVnode")]),t._v("，发现引用一致没有变化，将"),n("code",[t._v("旧尾")]),t._v("插入到"),n("code",[t._v("新头")]),t._v("前面")]),t._v(" "),n("li",[n("code",[t._v("newStartIdx++")]),t._v("、"),n("code",[t._v("oldEndIdx--")])]),t._v(" "),n("li",[t._v("此时"),n("code",[t._v("newStartIdx > newEndIdx")]),t._v("，表示"),n("code",[t._v("newCh")]),t._v("先遍历完，此时"),n("code",[t._v("oldStartIdx")]),t._v("、"),n("code",[t._v("oldEndIdx")]),t._v("之间的节点"),n("code",[t._v("a")]),t._v("、"),n("code",[t._v("b")]),t._v("已经不存在了，调用"),n("code",[t._v("removeVnodes")]),t._v("将它们从DOM里删除")])])])]),t._v(" "),n("p",[n("img",{attrs:{src:a(402),alt:"alt"}})]),t._v(" "),n("h3",{attrs:{id:"vue-updatechildren源码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-updatechildren源码"}},[t._v("#")]),t._v(" vue updateChildren源码")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateChildren")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newCh")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" newEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" oldKeyToIdx\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" idxInOld\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" elmToMove\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" before\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" oldEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//对于vnode.key的比较，会把oldVnode = null")]),t._v("\n                oldStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                oldEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                newStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                newEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                oldStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                newStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                oldEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                newEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextSibling")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                oldStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                newEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sameVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldEndVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                oldEndVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                newStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用key时的比较")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldKeyToIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    oldKeyToIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createKeyToOldIdx")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有key生成index表")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                idxInOld "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldKeyToIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    newStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    elmToMove "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elmToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sel "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sel"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createEle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("patchVnode")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elmToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("idxInOld"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n                        api"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertBefore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elmToMove"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldStartVnode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n                    newStartVnode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            before "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("newEndIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("el\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addVnodes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" before"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("newStartIdx "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" newEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("removeVnodes")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parentElm"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldCh"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldStartIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldEndIdx"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br"),n("span",{staticClass:"line-number"},[t._v("49")]),n("br"),n("span",{staticClass:"line-number"},[t._v("50")]),n("br"),n("span",{staticClass:"line-number"},[t._v("51")]),n("br"),n("span",{staticClass:"line-number"},[t._v("52")]),n("br"),n("span",{staticClass:"line-number"},[t._v("53")]),n("br"),n("span",{staticClass:"line-number"},[t._v("54")]),n("br"),n("span",{staticClass:"line-number"},[t._v("55")]),n("br"),n("span",{staticClass:"line-number"},[t._v("56")]),n("br"),n("span",{staticClass:"line-number"},[t._v("57")]),n("br"),n("span",{staticClass:"line-number"},[t._v("58")]),n("br"),n("span",{staticClass:"line-number"},[t._v("59")]),n("br"),n("span",{staticClass:"line-number"},[t._v("60")]),n("br"),n("span",{staticClass:"line-number"},[t._v("61")]),n("br"),n("span",{staticClass:"line-number"},[t._v("62")]),n("br"),n("span",{staticClass:"line-number"},[t._v("63")]),n("br"),n("span",{staticClass:"line-number"},[t._v("64")]),n("br"),n("span",{staticClass:"line-number"},[t._v("65")]),n("br"),n("span",{staticClass:"line-number"},[t._v("66")]),n("br"),n("span",{staticClass:"line-number"},[t._v("67")]),n("br"),n("span",{staticClass:"line-number"},[t._v("68")]),n("br"),n("span",{staticClass:"line-number"},[t._v("69")]),n("br")])]),n("h2",{attrs:{id:"四种diff算法总结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#四种diff算法总结"}},[t._v("#")]),t._v(" 四种Diff算法总结")]),t._v(" "),n("ul",[n("li",[n("p",[n("strong",[t._v("传统Diff")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("通过"),n("strong",[t._v("递归")]),t._v("，对 HTML DOM树里的节点 进行依次对比。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("React Virtual DOM Diff")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("基于三个策略 "),n("strong",[t._v("（不同层级不比、不同组件类型不比、不同key值不比）")]),t._v(" "),n("ul",[n("li",[t._v("忽略DOM节点的跨层级操作（因为特别少）")]),t._v(" "),n("li",[t._v("同一类型的两个组件会生成相似的树形结构，不同类型的两个组件会生成不同的树形结构")]),t._v(" "),n("li",[t._v("同一层级的子节点，通过"),n("code",[t._v("key")]),t._v("值进行区分")])])]),t._v(" "),n("li",[t._v("根据不同细粒度（tree、component、element）进行Diff\n"),n("ul",[n("li",[t._v("tree diff：对树进行 "),n("strong",[t._v("同层比较")]),t._v("。\n"),n("ul",[n("li",[t._v("【做法：如果节点不存在则会直接销毁，不会进一步比较】")])])]),t._v(" "),n("li",[t._v("component diff：根据组件 "),n("strong",[t._v("“是否为同一类型”")]),t._v("，采取不同做法。\n"),n("ul",[n("li",[t._v("【做法：同一类型的组件：按照 "),n("code",[t._v("同层比较策略")]),t._v(" 继续比较（也可通过"),n("code",[t._v("shouldComponentUpdate()")]),t._v("来判断是否需要diff）；若为不同类型的组件，则替换整个组件】")])])]),t._v(" "),n("li",[t._v("element diff：根据新节点的"),n("code",[t._v("key")]),t._v("值以及"),n("code",[t._v("在旧集合位置")]),t._v("，采取不同做法。\n"),n("ul",[n("li",[t._v("【做法：遍历新集合中的节点；通过"),n("code",[t._v("key")]),t._v("判断 "),n("code",[t._v("“旧集合中是否存在相同节点”")]),t._v("，若不存在，则插入；否则，比较 "),n("code",[t._v("当前节点在旧集合中的位置")]),t._v(" 与 "),n("code",[t._v("访问过的节点，在旧集合中最右的位置")]),t._v("：若当前节点在旧集合中的位置靠后，则不需移动；否则移动。】")])])])])])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("Fiber Diff")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("从链表头开始遍历，碰到一个节点就和它自己的 "),n("code",[t._v("alternate")]),t._v(" 比较，并记录下需要更新的东西（作为"),n("code",[t._v("commit")]),t._v("），并把这些更新通过 "),n("code",[t._v("return")]),t._v(" 提交到当前节点的父节点。当遍历完整个链表时，再通过 "),n("code",[t._v("return")]),t._v(" 回溯到根节点。这样就能把所有的更新全部带到根节点，最后更新到真实的DOM中。")])])]),t._v(" "),n("li",[n("p",[n("strong",[t._v("Vue Virtual DOM Diff")]),t._v("：")]),t._v(" "),n("ul",[n("li",[t._v("Vue只作 "),n("strong",[t._v("同层比较")]),t._v("，且对于 "),n("strong",[t._v("不同类型的节点")]),t._v(" 会直接用新节点替换")]),t._v(" "),n("li",[t._v("先让"),n("code",[t._v("vnode.el")]),t._v("引用真实dom（为了同步变化）后，开始比较"),n("code",[t._v("oldVnode")]),t._v("、"),n("code",[t._v("vnode")])]),t._v(" "),n("li",[t._v("依次判断 "),n("strong",[t._v("5类情况")]),t._v("：\n"),n("ul",[n("li",[t._v("1、引用是否一致；【做法：不需改变】")]),t._v(" "),n("li",[t._v("2、新旧都为文本节点【做法：只需修改text】")]),t._v(" "),n("li",[t._v("3、新旧节点都有子节点，而且它们不一样【做法：执行"),n("code",[t._v("updateChildren")]),t._v("】"),n("strong",[t._v("（Vue Diff核心）")]),t._v("；")]),t._v(" "),n("li",[t._v("4、只有新节点有子节点；【做法：在老节点上添加新节点】")]),t._v(" "),n("li",[t._v("5、只有旧节点有子节点，新节点没有子节点。【做法：直接删除老节点】")])])]),t._v(" "),n("li",[t._v("在"),n("code",[t._v("updateChildren")]),t._v("的过程中，"),n("code",[t._v("oldCh")]),t._v("、"),n("code",[t._v("newCh")]),t._v("会进行 "),n("strong",[t._v("头尾两端的相互比较")]),t._v(" （即：旧头新头、旧尾新尾、旧头新尾、旧尾新头）。若设置"),n("code",[t._v("key")]),t._v("，会多了一步“查找匹配节点”")]),t._v(" "),n("li",[t._v("最后指针会往中间靠拢，直到结束")])])])]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("对于“同一类型”这个说法，React会认为“两节点是同一个组件类的不同实例、相同HTML标签”这类”是属于同一类型；Vue会认为“两节点的key && sel相同”时是属于同一类型。")])]),t._v(" "),n("li",[n("p",[t._v("另外，vue中在使用相同标签名元素的 "),n("strong",[t._v("过渡切换")]),t._v(" 时，"),n("strong",[t._v("需用不同key值作区分")]),t._v("。否则vue只会替换其内部属性而不会触发过渡效果。")])])])]),t._v(" "),n("h2",{attrs:{id:"参考链接"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/20346379",target:"_blank",rel:"noopener noreferrer"}},[t._v("React 源码剖析系列 － 不可思议的 react diff"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1402610",target:"_blank",rel:"noopener noreferrer"}},[t._v("谈谈React中Diff算法的策略及实现"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"http://www.ptbird.cn/react-diff-from-code.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("React diff 策略"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://cloud.tencent.com/developer/article/1477707",target:"_blank",rel:"noopener noreferrer"}},[t._v("详解 React 16 的 Diff 策略"),n("OutboundLink")],1)]),t._v(" "),n("li",[n("a",{attrs:{href:"https://segmentfault.com/a/1190000018488975",target:"_blank",rel:"noopener noreferrer"}},[t._v("React16性能改善的原理（二）"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=e.exports}}]);